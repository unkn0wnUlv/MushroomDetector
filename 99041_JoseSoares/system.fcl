FUNCTION_BLOCK system

VAR_INPUT
    sensor_left : REAL; (* RANGE(0 .. 10) *)
    sensor_center : REAL; (* RANGE(0 .. 10) *)
    sensor_right : REAL; (* RANGE(0 .. 10) *)
    mushroom : REAL;
END_VAR

VAR_OUTPUT
    action : REAL;
    robot_velocity : REAL;
    wheel_angle : REAL; (* RANGE(-45 .. 45) *)
END_VAR

FUZZIFY sensor_right
    TERM near := (0, 1) (5, 0) ; 
    TERM medium := (1, 0) (4,1) (6,1) (9,0);
    TERM far := (5, 0) (10, 1);
END_FUZZIFY

FUZZIFY sensor_left
    TERM near := (0, 1) (5, 0) ; 
    TERM medium := (1, 0) (4,1) (6,1) (9,0);
    TERM far := (5, 0) (10, 1);
END_FUZZIFY

FUZZIFY sensor_center
    TERM near := (0, 1) (5, 0) ; 
    TERM medium := (1, 0) (4,1) (6,1) (9,0);
    TERM far := (5, 0) (10, 1);
END_FUZZIFY

FUZZIFY mushroom
    TERM none := (0, 0) (5, 1) (10,0) ; 
    TERM edible := (10, 0) (15,1) (20,0);
    TERM poisonous := (20, 0) (25,1) (30, 0);
END_FUZZIFY

DEFUZZIFY wheel_angle
    TERM strong_left := 45;
    TERM left := 22.5;
    TERM center := 0;
    TERM right := -22.5;
    TERM strong_right := -45;
    METHOD: COGS;
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY robot_velocity
    TERM slow := 1;
    TERM medium := 5;
    TERM fast := 10;
    METHOD: COGS;
    DEFAULT := 5;
END_DEFUZZIFY

DEFUZZIFY action
    TERM no_action := 0;
    TERM destroy := 1;
    TERM pickup := 2;
    METHOD: COGS;
    DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK first

ACT: MIN;
ACCU: MAX;

RULE 0: IF (mushroom IS poisonous) AND ((sensor_center IS near) OR (sensor_right IS near) OR (sensor_left IS near)) THEN action IS destroy;
RULE 1: IF (mushroom IS edible) AND ((sensor_center IS near) OR (sensor_right IS near) OR (sensor_left IS near)) THEN action IS pickup;
RULE 2: IF (mushroom IS none) AND ((sensor_center IS near) OR (sensor_right IS near) OR (sensor_left IS near)) THEN action IS no_action;


RULE 3: IF (sensor_center IS near) OR (sensor_center IS medium) OR (sensor_center IS far) THEN wheel_angle IS center;

RULE 4: IF (sensor_right IS far)  THEN wheel_angle IS strong_right;
RULE 5: IF (sensor_right IS medium) THEN wheel_angle IS right;
RULE 6: IF (sensor_right IS near) THEN wheel_angle IS center;

RULE 7: IF (sensor_left IS far)  THEN wheel_angle IS strong_left;
RULE 8: IF (sensor_left IS medium) THEN wheel_angle IS left;
RULE 9: IF (sensor_left IS near) THEN wheel_angle IS center;

END_RULEBLOCK

END_FUNCTION_BLOCK
